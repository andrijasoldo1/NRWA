openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/documentation:
    get:
      summary: 'Display Swagger API page.'
      operationId: displaySwaggerAPIPage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>L5 Swagger UI</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"http://localhost/docs/asset/swagger-ui.css?v=46937e45e4e342ab1be319bfa1351777\">\r\n    <link rel=\"icon\" type=\"image/png\" href=\"http://localhost/docs/asset/favicon-32x32.png?v=40d4f2c38d1cd854ad463f16373cbcb6\" sizes=\"32x32\"/>\r\n    <link rel=\"icon\" type=\"image/png\" href=\"http://localhost/docs/asset/favicon-16x16.png?v=f0ae831196d55d8f4115b6c5e8ec5384\" sizes=\"16x16\"/>\r\n    <style>\r\n    html\r\n    {\r\n        box-sizing: border-box;\r\n        overflow: -moz-scrollbars-vertical;\r\n        overflow-y: scroll;\r\n    }\r\n    *,\r\n    *:before,\r\n    *:after\r\n    {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n      margin:0;\r\n      background: #fafafa;\r\n    }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n<div id=\"swagger-ui\"></div>\r\n\r\n<script src=\"http://localhost/docs/asset/swagger-ui-bundle.js?v=16c92ba77a485613c92eb82454d7fbee\"></script>\r\n<script src=\"http://localhost/docs/asset/swagger-ui-standalone-preset.js?v=3060b7fa799527d9775c5100c725fea1\"></script>\r\n<script>\r\n    window.onload = function() {\r\n        // Build a system\r\n        const ui = SwaggerUIBundle({\r\n            dom_id: '#swagger-ui',\r\n            url: \"http://localhost/docs/api-docs.json\",\r\n            operationsSorter: null,\r\n            configUrl: null,\r\n            validatorUrl: null,\r\n            oauth2RedirectUrl: \"http://localhost/api/oauth2-callback\",\r\n\r\n            requestInterceptor: function(request) {\r\n                request.headers['X-CSRF-TOKEN'] = '';\r\n                return request;\r\n            },\r\n\r\n            presets: [\r\n                SwaggerUIBundle.presets.apis,\r\n                SwaggerUIStandalonePreset\r\n            ],\r\n\r\n            plugins: [\r\n                SwaggerUIBundle.plugins.DownloadUrl\r\n            ],\r\n\r\n            layout: \"StandaloneLayout\",\r\n            docExpansion : \"none\",\r\n            deepLinking: true,\r\n            filter: true,\r\n            persistAuthorization: \"false\",\r\n\r\n        })\r\n\r\n        window.ui = ui\r\n\r\n            }\r\n</script>\r\n</body>\r\n</html>\r\n"
      tags:
        - Endpoints
      security: []
  /api/oauth2-callback:
    get:
      summary: 'Display Oauth2 callback pages.'
      operationId: displayOauth2CallbackPages
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!doctype html>\r\n<html lang=\"en-US\">\r\n<head>\r\n    <title>Swagger UI: OAuth2 Redirect</title>\r\n</head>\r\n<body>\r\n<script>\r\n    'use strict';\r\n    function run () {\r\n        var oauth2 = window.opener.swaggerUIRedirectOauth2;\r\n        var sentState = oauth2.state;\r\n        var redirectUrl = oauth2.redirectUrl;\r\n        var isValid, qp, arr;\r\n\r\n        if (/code|token|error/.test(window.location.hash)) {\r\n            qp = window.location.hash.substring(1).replace('?', '&');\r\n        } else {\r\n            qp = location.search.substring(1);\r\n        }\r\n\r\n        arr = qp.split(\"&\");\r\n        arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';});\r\n        qp = qp ? JSON.parse('{' + arr.join() + '}',\r\n                function (key, value) {\r\n                    return key === \"\" ? value : decodeURIComponent(value);\r\n                }\r\n        ) : {};\r\n\r\n        isValid = qp.state === sentState;\r\n\r\n        if ((\r\n          oauth2.auth.schema.get(\"flow\") === \"accessCode\" ||\r\n          oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ||\r\n          oauth2.auth.schema.get(\"flow\") === \"authorization_code\"\r\n        ) && !oauth2.auth.code) {\r\n            if (!isValid) {\r\n                oauth2.errCb({\r\n                    authId: oauth2.auth.name,\r\n                    source: \"auth\",\r\n                    level: \"warning\",\r\n                    message: \"Authorization may be unsafe, passed state was changed in server. The passed state wasn't returned from auth server.\"\r\n                });\r\n            }\r\n\r\n            if (qp.code) {\r\n                delete oauth2.state;\r\n                oauth2.auth.code = qp.code;\r\n                oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl});\r\n            } else {\r\n                let oauthErrorMsg;\r\n                if (qp.error) {\r\n                    oauthErrorMsg = \"[\"+qp.error+\"]: \" +\r\n                        (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") +\r\n                        (qp.error_uri ? \"More info: \"+qp.error_uri : \"\");\r\n                }\r\n\r\n                oauth2.errCb({\r\n                    authId: oauth2.auth.name,\r\n                    source: \"auth\",\r\n                    level: \"error\",\r\n                    message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server.\"\r\n                });\r\n            }\r\n        } else {\r\n            oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl});\r\n        }\r\n        window.close();\r\n    }\r\n\r\n    if (document.readyState !== 'loading') {\r\n        run();\r\n    } else {\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            run();\r\n        });\r\n    }\r\n</script>\r\n</body>\r\n</html>\r\n"
      tags:
        - Endpoints
      security: []
  /api/banks:
    get:
      summary: ''
      operationId: getApiBanks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    bname: Bank1
                    city: City1
                    owner_id: 3
                  -
                    id: 3
                    bname: Bank3
                    city: City3
                    owner_id: 3
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiBanks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bname:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: tvizeam
                city:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: sfewmnpuux
                owner_id:
                  type: string
                  description: ''
                  example: quos
              required:
                - bname
                - city
                - owner_id
      security: []
  '/api/banks/{id}':
    get:
      summary: ''
      operationId: getApiBanksId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  bname: Bank1
                  city: City1
                  owner_id: 3
                properties:
                  id:
                    type: integer
                    example: 1
                  bname:
                    type: string
                    example: Bank1
                  city:
                    type: string
                    example: City1
                  owner_id:
                    type: integer
                    example: 3
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiBanksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiBanksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the bank.'
        example: 1
        required: true
        schema:
          type: integer
  /api/individuals:
    get:
      summary: ''
      operationId: getApiIndividuals
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    ssn: 123456789
                    name: Individual1
                    owner_id: 4
                  -
                    id: 3
                    ssn: 345678901
                    name: Individual3
                    owner_id: 3
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiIndividuals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ssn:
                  type: number
                  description: ''
                  example: 3333.623416821
                name:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: eqyfneoduuvkdxy
                owner_id:
                  type: string
                  description: ''
                  example: odio
              required:
                - ssn
                - name
                - owner_id
      security: []
  '/api/individuals/{id}':
    get:
      summary: ''
      operationId: getApiIndividualsId
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  ssn: 123456789
                  name: Individual1
                  owner_id: 4
                properties:
                  id:
                    type: integer
                    example: 1
                  ssn:
                    type: integer
                    example: 123456789
                  name:
                    type: string
                    example: Individual1
                  owner_id:
                    type: integer
                    example: 4
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiIndividualsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiIndividualsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the individual.'
        example: 1
        required: true
        schema:
          type: integer
  /api/owns:
    get:
      summary: ''
      operationId: getApiOwns
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    owner_id: 1
                    vehicle_id: 1
                  -
                    id: 3
                    owner_id: 3
                    vehicle_id: 3
                  -
                    id: 4
                    owner_id: 6
                    vehicle_id: 4
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiOwns
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: string
                  description: ''
                  example: aliquid
                vehicle_id:
                  type: string
                  description: ''
                  example: illo
              required:
                - owner_id
                - vehicle_id
      security: []
  '/api/owns/{id}':
    get:
      summary: ''
      operationId: getApiOwnsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Ownership not found'
                properties:
                  message:
                    type: string
                    example: 'Ownership not found'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiOwnsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiOwnsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the own.'
        example: ratione
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
